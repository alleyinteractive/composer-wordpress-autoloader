name: Tests

on: [push, pull_request]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest, windows-2019]
        php: [8.0, 8.1, 8.2, 8.3]
        stability: [prefer-lowest, prefer-stable]

    name: P${{ matrix.php }} - ${{ matrix.stability }} - ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick, fileinfo
          coverage: none

      - name: Setup problem matchers
        run: |
          echo "::add-matcher::${{ runner.tool_cache }}/php.json"
          echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: Install dependencies
        run: composer update --${{ matrix.stability }} --prefer-dist --no-interaction

      - name: Composer Validate
        run: composer validate --strict

      - name: Install root test dependencies
        run: cd tests/fixtures/root && composer install

      - name: Install inject test dependencies
        run: cd tests/fixtures/inject && composer install

      - name: Install APCu test dependencies
        run: cd tests/fixtures/apcu && composer install

      - name: Install vendor-dir test dependencies
        run: cd tests/fixtures/vendor-dir && composer install

      - name: Execute phpcs
        if: matrix.os != 'windows-2019'
        run: composer run phpcs

      - name: Execute phpunit
        run: composer run phpunit
